"use client";

import { notFound } from 'next/navigation';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';
import { Separator } from '@/components/ui/separator';
import { 
  Star, 
  Heart, 
  Share2, 
  ShoppingCart, 
  Clock, 
  Shield, 
  Truck,
  Eye,
  Download,
  CheckCircle
} from 'lucide-react';

interface ProductPageProps {
  params: { locale: string; slug: string };
}

// Mock product data
const getProductBySlug = (slug: string) => {
  const products = {
    'canvas-30x40': {
      id: 'canvas-30x40',
      title: '–•–æ–ª—Å—Ç 30x40 —Å–º –∑ –≥–∞–ª–µ—Ä–µ–π–Ω–æ—é –∫—Ä–æ–º–∫–æ—é',
      description: '–í–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω–∏–π –¥—Ä—É–∫ –≤–∞—à–æ–≥–æ —Ñ–æ—Ç–æ –Ω–∞ —Ö—É–¥–æ–∂–Ω—å–æ–º—É —Ö–æ–ª—Å—Ç—ñ –∑ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ—é –≥–∞–ª–µ—Ä–µ–π–Ω–æ—é –∫—Ä–æ–º–∫–æ—é. –Ü–¥–µ–∞–ª—å–Ω–æ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è –ø–æ—Ä—Ç—Ä–µ—Ç—ñ–≤ —Ç–∞ –ø–µ–π–∑–∞–∂—ñ–≤.',
      category: 'canvas',
      basePrice: 450,
      originalPrice: 550,
      discount: 18,
      rating: 4.8,
      reviewsCount: 127,
      images: ['üñºÔ∏è'],
      features: [
        '–•—É–¥–æ–∂–Ω—ñ–π —Ö–æ–ª—Å—Ç 380–≥/–º¬≤',
        '–ì–∞–ª–µ—Ä–µ–π–Ω–∞ –∫—Ä–æ–º–∫–∞ 38–º–º',
        '–ü—ñ–¥—Ä–∞–º–Ω–∏–∫ –∑ —Å–æ—Å–Ω–æ–≤–∏—Ö –±—Ä—É—Å–∫—ñ–≤',
        '–ö—Ä—ñ–ø–ª–µ–Ω–Ω—è –¥–ª—è –ø—ñ–¥–≤—ñ—à—É–≤–∞–Ω–Ω—è'
      ],
      specs: {
        '–†–æ–∑–º—ñ—Ä': '30√ó40 —Å–º',
        '–¢–æ–≤—â–∏–Ω–∞ –ø—ñ–¥—Ä–∞–º–Ω–∏–∫–∞': '38 –º–º',
        '–ú–∞—Ç–µ—Ä—ñ–∞–ª —Ö–æ–ª—Å—Ç–∞': '–ë–∞–≤–æ–≤–Ω–∞/–ø–æ–ª—ñ–µ—Å—Ç–µ—Ä',
        '–ö—Ä–æ–º–∫–∞': '–ì–∞–ª–µ—Ä–µ–π–Ω–∞',
        '–ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è': '24-48 –≥–æ–¥–∏–Ω'
      },
      options: [
        { name: '–†–æ–∑–º—ñ—Ä', values: ['30√ó40 —Å–º (+0‚Ç¥)', '40√ó60 —Å–º (+200‚Ç¥)', '60√ó90 —Å–º (+400‚Ç¥)'] },
        { name: '–ö—Ä–æ–º–∫–∞', values: ['–ì–∞–ª–µ—Ä–µ–π–Ω–∞', '–î–∑–µ—Ä–∫–∞–ª—å–Ω–∞ (+50‚Ç¥)', '–ë—ñ–ª–∞ (+30‚Ç¥)'] },
        { name: '–ü—ñ–¥—Ä–∞–º–Ω–∏–∫', values: ['18–º–º', '38–º–º (+100‚Ç¥)'] }
      ],
      inStock: true,
      popular: true
    },
    'acrylic-30x30': {
      id: 'acrylic-30x30',
      title: '–ê–∫—Ä–∏–ª 30x30 —Å–º –∑ –ø—ñ–¥—Å–≤—ñ—Ç–∫–æ—é',
      description: '–ü—Ä–µ–º—ñ—É–º –¥—Ä—É–∫ –Ω–∞ –∞–∫—Ä–∏–ª—ñ –∑ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—é LED-–ø—ñ–¥—Å–≤—ñ—Ç–∫–∏. –°—Ç–≤–æ—Ä—é—î –µ—Ñ–µ–∫—Ç –≥–ª–∏–±–∏–Ω–∏ —Ç–∞ –æ–±\'—î–º—É –¥–ª—è –≤–∞—à–∏—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π.',
      category: 'acrylic',
      basePrice: 350,
      originalPrice: 420,
      discount: 17,
      rating: 4.9,
      reviewsCount: 89,
      images: ['üíé'],
      features: [
        '–ê–∫—Ä–∏–ª —Ç–æ–≤—â–∏–Ω–∞ 5–º–º',
        'Face-mount —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—è',
        '–ü—ñ–¥—Å–≤—ñ—Ç–∫–∞ LED (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)',
        '–î–∏—Å—Ç–∞–Ω—Ü—ñ–π–Ω–µ –∫—Ä—ñ–ø–ª–µ–Ω–Ω—è'
      ],
      specs: {
        '–†–æ–∑–º—ñ—Ä': '30√ó30 —Å–º',
        '–¢–æ–≤—â–∏–Ω–∞': '5 –º–º',
        '–ú–∞—Ç–µ—Ä—ñ–∞–ª': '–ê–∫—Ä–∏–ª –ø—Ä–µ–º—ñ—É–º',
        '–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—è': 'Face-mount',
        '–ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è': '48-72 –≥–æ–¥–∏–Ω–∏'
      },
      options: [
        { name: '–†–æ–∑–º—ñ—Ä', values: ['30√ó30 —Å–º (+0‚Ç¥)', '40√ó40 —Å–º (+100‚Ç¥)', '50√ó70 —Å–º (+350‚Ç¥)'] },
        { name: '–¢–æ–≤—â–∏–Ω–∞', values: ['5–º–º', '8–º–º (+150‚Ç¥)', '10–º–º (+250‚Ç¥)'] },
        { name: '–ü—ñ–¥—Å–≤—ñ—Ç–∫–∞', values: ['–ë–µ–∑ –ø—ñ–¥—Å–≤—ñ—Ç–∫–∏', 'LED (+300‚Ç¥)'] }
      ],
      inStock: true,
      popular: true
    }
  };
  
  return products[slug as keyof typeof products] || null;
};

export default function ProductPage({ params: { locale, slug } }: ProductPageProps) {
  const product = getProductBySlug(slug);
  
  if (!product) {
    notFound();
  }

  // Create JSON-LD structured data
  const productJsonLd = {
    '@context': 'https://schema.org/',
    '@type': 'Product',
    'name': product.title,
    'description': product.description,
    'offers': {
      '@type': 'Offer',
      'url': `https://poliprint.com.ua/${locale}/product/${product.id}`,
      'priceCurrency': 'UAH',
      'price': product.basePrice,
      'availability': 'https://schema.org/InStock',
    }
  };

  return (
    <>
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(productJsonLd) }}
      />
      
      <div className="min-h-screen bg-background">
        <div className="container mx-auto px-4 py-8">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
            {/* Product Images */}
            <div className="space-y-4">
              {/* Main Image */}
              <Card className="overflow-hidden">
                <div className="aspect-square bg-gradient-primary relative">
                  <div className="absolute inset-6 bg-surface rounded-lg border border-border/20 flex items-center justify-center">
                    <span className="text-8xl opacity-80">{product.images[0]}</span>
                  </div>
                  
                  {/* Badges */}
                  <div className="absolute top-4 left-4 flex gap-2">
                    {product.popular && (
                      <Badge className="bg-primary text-primary-foreground">
                        –•—ñ—Ç –ø—Ä–æ–¥–∞–∂—ñ–≤
                      </Badge>
                    )}
                    {product.discount > 0 && (
                      <Badge className="bg-destructive text-destructive-foreground">
                        -{product.discount}%
                      </Badge>
                    )}
                  </div>

                  {/* Action Buttons */}
                  <div className="absolute top-4 right-4 flex flex-col gap-2">
                    <Button size="icon" variant="secondary" className="hover:scale-110 transition-transform">
                      <Heart className="w-4 h-4" />
                    </Button>
                    <Button size="icon" variant="secondary" className="hover:scale-110 transition-transform">
                      <Share2 className="w-4 h-4" />
                    </Button>
                    <Button size="icon" variant="secondary" className="hover:scale-110 transition-transform">
                      <Eye className="w-4 h-4" />
                    </Button>
                  </div>

                  {/* 3D Preview Button */}
                  <div className="absolute bottom-4 left-4">
                    <Button variant="secondary" size="sm">
                      3D –ü—Ä–µ–≤—å—é
                    </Button>
                  </div>
                </div>
              </Card>

              {/* Image Gallery */}
              <div className="grid grid-cols-4 gap-2">
                {[1, 2, 3, 4].map((index) => (
                  <Card key={index} className="aspect-square overflow-hidden cursor-pointer hover:ring-2 hover:ring-primary transition-all">
                    <div className="aspect-square bg-gradient-accent flex items-center justify-center">
                      <span className="text-2xl opacity-60">{product.images[0]}</span>
                    </div>
                  </Card>
                ))}
              </div>
            </div>

            {/* Product Info */}
            <div className="space-y-6">
              {/* Header */}
              <div className="space-y-4">
                <div className="flex items-center gap-2 text-sm text-muted-foreground">
                  <span>–ö–∞—Ç–∞–ª–æ–≥</span>
                  <span>/</span>
                  <span>–•–æ–ª—Å—Ç</span>
                  <span>/</span>
                  <span className="text-foreground">{product.title}</span>
                </div>

                <h1 className="text-3xl font-heading font-bold">{product.title}</h1>
                
                <p className="text-muted-foreground leading-relaxed">
                  {product.description}
                </p>

                {/* Rating */}
                <div className="flex items-center gap-3">
                  <div className="flex items-center gap-1">
                    {[...Array(5)].map((_, i) => (
                      <Star key={i} className={`w-4 h-4 ${i < Math.floor(product.rating) ? 'fill-yellow-400 text-yellow-400' : 'text-muted-foreground'}`} />
                    ))}
                    <span className="text-sm font-medium ml-1">{product.rating}</span>
                  </div>
                  <span className="text-sm text-muted-foreground">
                    ({product.reviewsCount} –≤—ñ–¥–≥—É–∫—ñ–≤)
                  </span>
                </div>
              </div>

              <Separator />

              {/* Pricing */}
              <div className="space-y-3">
                <div className="flex items-baseline gap-3">
                  <span className="text-3xl font-bold text-primary">{product.basePrice} ‚Ç¥</span>
                  {product.originalPrice > product.basePrice && (
                    <span className="text-lg text-muted-foreground line-through">
                      {product.originalPrice} ‚Ç¥
                    </span>
                  )}
                </div>
                
                {product.inStock ? (
                  <div className="flex items-center gap-2 text-success">
                    <CheckCircle className="w-4 h-4" />
                    <span className="text-sm font-medium">–í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ</span>
                  </div>
                ) : (
                  <div className="text-destructive text-sm">–ù–µ–º–∞—î –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ</div>
                )}
              </div>

              <Separator />

              {/* Options */}
              <div className="space-y-4">
                <h3 className="font-semibold">–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</h3>
                {product.options.map((option) => (
                  <div key={option.name} className="space-y-2">
                    <label className="text-sm font-medium">{option.name}</label>
                    <div className="grid grid-cols-2 gap-2">
                      {option.values.map((value) => (
                        <Button key={value} variant="outline" size="sm" className="justify-start">
                          {value}
                        </Button>
                      ))}
                    </div>
                  </div>
                ))}
              </div>

              <Separator />

              {/* Actions */}
              <div className="space-y-4">
                <div className="flex gap-3">
                  <Button size="lg" className="btn-hero flex-1" onClick={() => {
                    alert(`–¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ –≤ –∫–æ—à–∏–∫!`);
                    // TODO: Integrate with real cart context
                  }}>
                    <ShoppingCart className="w-5 h-5 mr-2" />
                    –î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫
                  </Button>
                  <Button size="lg" variant="outline" className="px-6" asChild>
                    <a href={`/${locale}/configurator?product=${slug}`}>
                      –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ç–æ—Ä
                    </a>
                  </Button>
                </div>

                <div className="grid grid-cols-3 gap-4 text-center">
                  <div className="space-y-1">
                    <Clock className="w-5 h-5 mx-auto text-primary" />
                    <div className="text-xs text-muted-foreground">24-48 –≥–æ–¥</div>
                  </div>
                  <div className="space-y-1">
                    <Shield className="w-5 h-5 mx-auto text-success" />
                    <div className="text-xs text-muted-foreground">–ì–∞—Ä–∞–Ω—Ç—ñ—è —è–∫–æ—Å—Ç—ñ</div>
                  </div>
                  <div className="space-y-1">
                    <Truck className="w-5 h-5 mx-auto text-accent" />
                    <div className="text-xs text-muted-foreground">–ù–æ–≤–∞ –ü–æ—à—Ç–∞</div>
                  </div>
                </div>
              </div>

              <Separator />

              {/* Features */}
              <div className="space-y-3">
                <h3 className="font-semibold">–û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ</h3>
                <div className="space-y-2">
                  {product.features.map((feature, index) => (
                    <div key={index} className="flex items-center gap-2 text-sm">
                      <CheckCircle className="w-4 h-4 text-success flex-shrink-0" />
                      {feature}
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>

          {/* Specifications */}
          <div className="mt-12">
            <Card>
              <CardContent className="p-6">
                <h3 className="font-heading font-semibold text-lg mb-4">–¢–µ—Ö–Ω—ñ—á–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h3>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  {Object.entries(product.specs).map(([key, value]) => (
                    <div key={key} className="flex justify-between py-2 border-b border-border/50 last:border-b-0">
                      <span className="text-muted-foreground">{key}</span>
                      <span className="font-medium">{value}</span>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </>
  );
}