"use client";

import { useState, useEffect, useMemo } from 'react';
import { Sheet, SheetContent, SheetHeader, SheetTitle } from '@/components/ui/sheet';
import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Card, CardContent } from '@/components/ui/card';
import { Separator } from '@/components/ui/separator';
import { ScrollArea } from '@/components/ui/scroll-area';
import { Search, X, Sparkles, Clock, TrendingUp, ArrowRight } from 'lucide-react';
import { LocaleLink as Link } from '@/components/ui/LocaleLink';

interface SearchDrawerProps {
  isOpen: boolean;
  onClose: () => void;
  children?: React.ReactNode;
}

interface SearchResult {
  id: string;
  title: string;
  description: string;
  category: string;
  price?: string;
  href: string;
  image: string;
  type: 'product' | 'page' | 'category';
}

export function SearchDrawer({ isOpen, onClose, children }: SearchDrawerProps) {
  const [searchQuery, setSearchQuery] = useState('');
  const [searchHistory, setSearchHistory] = useState<string[]>([]);
  const [isSearching, setIsSearching] = useState(false);

  // Mock search data
  const searchData: SearchResult[] = [
    // Products
    { id: '1', title: '–î—Ä—É–∫ –Ω–∞ —Ö–æ–ª—Å—Ç—ñ 60√ó90', description: '–í–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω–∏–π –¥—Ä—É–∫ —Ñ–æ—Ç–æ –Ω–∞ —Ö—É–¥–æ–∂–Ω—å–æ–º—É —Ö–æ–ª—Å—Ç—ñ', category: '–•–æ–ª—Å—Ç', price: '–≤—ñ–¥ 750 ‚Ç¥', href: '/catalog/canvas', image: 'üñºÔ∏è', type: 'product' },
    { id: '2', title: '–ê–∫—Ä–∏–ª –∑ –ø—ñ–¥—Å–≤—ñ—Ç–∫–æ—é 40√ó60', description: '–ü—Ä–µ–º—ñ—É–º –¥—Ä—É–∫ –Ω–∞ –∞–∫—Ä–∏–ª—ñ –∑ LED –ø—ñ–¥—Å–≤—ñ—Ç–∫–æ—é', category: '–ê–∫—Ä–∏–ª', price: '–≤—ñ–¥ 650 ‚Ç¥', href: '/catalog/acrylic', image: 'üíé', type: 'product' },
    { id: '3', title: '–í—ñ–∑–∏—Ç–∫–∏ –ø—Ä–µ–º—ñ—É–º', description: '–í—ñ–∑–∏—Ç–∫–∏ –∑ –ª–∞–º—ñ–Ω–∞—Ü—ñ—î—é —Ç–∞ —Å–ø–µ—Ü–µ—Ñ–µ–∫—Ç–∞–º–∏', category: '–í—ñ–∑–∏—Ç–∫–∏', price: '–≤—ñ–¥ 120 ‚Ç¥', href: '/catalog/business-cards', image: 'üíº', type: 'product' },
    { id: '4', title: 'DTF –¥—Ä—É–∫ –Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞—Ö', description: '–Ø–∫—ñ—Å–Ω–∏–π –¥—Ä—É–∫ –Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞—Ö –Ω–æ–≤–æ—é —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—î—é', category: '–û–¥—è–≥', price: '–≤—ñ–¥ 150 ‚Ç¥', href: '/apparel/tshirts', image: 'üëï', type: 'product' },
    { id: '5', title: '–õ–∏—Å—Ç—ñ–≤–∫–∏ —Ç–∞ —Ñ–ª–∞—î—Ä–∏', description: '–†–µ–∫–ª–∞–º–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ –≤–∏—Å–æ–∫–æ—ó —è–∫–æ—Å—Ç—ñ', category: '–ü–æ–ª—ñ–≥—Ä–∞—Ñ—ñ—è', price: '–≤—ñ–¥ 15 ‚Ç¥', href: '/catalog/flyers', image: 'üìÑ', type: 'product' },
    { id: '6', title: '–£–ø–∞–∫–æ–≤–∫–∞ –ø—ñ–¥ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è', description: '–ö–æ—Ä–æ–±–∫–∏, –ø–∞–∫–µ—Ç–∏, –µ—Ç–∏–∫–µ—Ç–∫–∏ –∑–∞ –≤–∞—à–∏–º –¥–∏–∑–∞–π–Ω–æ–º', category: '–£–ø–∞–∫–æ–≤–∫–∞', price: '–≤—ñ–¥ 45 ‚Ç¥', href: '/catalog/packaging', image: 'üì¶', type: 'product' },
    
    // Pages
    { id: '7', title: 'AI –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ç–æ—Ä', description: '–†–æ–∑—É–º–Ω–∏–π –ø—ñ–¥–±—ñ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –¥—Ä—É–∫—É', category: '–Ü–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏', href: '/configurator', image: 'ü§ñ', type: 'page' },
    { id: '8', title: '–ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ —Ä–æ–±—ñ—Ç', description: '–ù–∞—à—ñ –∫—Ä–∞—â—ñ —Ä–æ–±–æ—Ç–∏ —Ç–∞ –ø—Ä–æ–µ–∫—Ç–∏', category: '–ì–∞–ª–µ—Ä–µ—è', href: '/portfolio', image: 'üñºÔ∏è', type: 'page' },
    { id: '9', title: '–®–∞–±–ª–æ–Ω–∏ –¥–∏–∑–∞–π–Ω—É', description: '–ì–æ—Ç–æ–≤—ñ –º–∞–∫–µ—Ç–∏ –¥–ª—è –≤–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç—ñ–≤', category: '–†–µ—Å—É—Ä—Å–∏', href: '/templates', image: 'üìã', type: 'page' },
    { id: '10', title: '–ë–ª–æ–≥ —Ç–∞ —Å—Ç–∞—Ç—Ç—ñ', description: '–ö–æ—Ä–∏—Å–Ω—ñ –ø–æ—Ä–∞–¥–∏ –ø—Ä–æ –¥—Ä—É–∫', category: '–ö–æ–Ω—Ç–µ–Ω—Ç', href: '/blog', image: 'üì∞', type: 'page' },
    
    // Categories
    { id: '11', title: '–ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ü—ñ—ó', description: '–í—Å—ñ –Ω–∞—à—ñ –ø–æ—Å–ª—É–≥–∏ –¥—Ä—É–∫—É', category: '–ù–∞–≤—ñ–≥–∞—Ü—ñ—è', href: '/catalog', image: 'üìö', type: 'category' },
  ];

  const popularSearches = [
    '—Ö–æ–ª—Å—Ç', '–≤—ñ–∑–∏—Ç–∫–∏', '–∞–∫—Ä–∏–ª', '—Ñ—É—Ç–±–æ–ª–∫–∏', '–ª–∏—Å—Ç—ñ–≤–∫–∏', '—É–ø–∞–∫–æ–≤–∫–∞', '–∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ç–æ—Ä'
  ];

  const trendingSearches = [
    'DTF –¥—Ä—É–∫', 'LED –ø—ñ–¥—Å–≤—ñ—Ç–∫–∞', '–≥–∞–ª–µ—Ä–µ–π–Ω–∞ –∫—Ä–æ–º–∫–∞', '—Ç–∏—Å–Ω–µ–Ω–Ω—è —Ñ–æ–ª—å–≥–æ—é'
  ];

  // Filter search results
  const searchResults = useMemo(() => {
    if (!searchQuery.trim()) return [];
    
    const query = searchQuery.toLowerCase();
    return searchData.filter(item => 
      item.title.toLowerCase().includes(query) ||
      item.description.toLowerCase().includes(query) ||
      item.category.toLowerCase().includes(query)
    ).slice(0, 8); // Limit to 8 results
  }, [searchQuery]);

  // Simulate search delay
  useEffect(() => {
    if (searchQuery.trim()) {
      setIsSearching(true);
      const timer = setTimeout(() => setIsSearching(false), 300);
      return () => clearTimeout(timer);
    }
  }, [searchQuery]);

  // Load search history from localStorage
  useEffect(() => {
    const history = localStorage.getItem('searchHistory');
    if (history) {
      setSearchHistory(JSON.parse(history));
    }
  }, []);

  const handleSearch = (query: string) => {
    if (query.trim()) {
      // Add to search history
      const updatedHistory = [query, ...searchHistory.filter(h => h !== query)].slice(0, 5);
      setSearchHistory(updatedHistory);
      localStorage.setItem('searchHistory', JSON.stringify(updatedHistory));
      
      // Here you would typically trigger actual search or navigation
      console.log('Searching for:', query);
    }
  };

  const handleResultClick = (result: SearchResult) => {
    handleSearch(result.title);
    onClose();
  };

  const handleQuickSearch = (query: string) => {
    setSearchQuery(query);
    handleSearch(query);
  };

  const clearHistory = () => {
    setSearchHistory([]);
    localStorage.removeItem('searchHistory');
  };

  return (
    <>
      {children}
      <Sheet open={isOpen} onOpenChange={(open) => !open && onClose()}>
        <SheetContent className="w-full sm:w-[600px] p-0 flex flex-col">
          <SheetHeader className="space-y-4 p-6 pb-4">
            <div className="flex items-center justify-between">
              <SheetTitle className="text-2xl font-heading flex items-center gap-2">
                <div className="w-8 h-8 bg-gradient-primary rounded-lg flex items-center justify-center">
                  <Search className="w-4 h-4 text-primary-foreground" />
                </div>
                –ü–æ—à—É–∫
              </SheetTitle>
            </div>
            
            {/* Search Input */}
            <div className="relative">
              <Search className="absolute left-3 top-3 h-4 w-4 text-muted-foreground" />
              <Input
                placeholder="–ü–æ—à—É–∫ —Ç–æ–≤–∞—Ä—ñ–≤, –ø–æ—Å–ª—É–≥, —Å—Ç–∞—Ç–µ–π..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="pl-9 pr-9"
                autoFocus
              />
              {searchQuery && (
                <Button
                  variant="ghost"
                  size="icon"
                  className="absolute right-1 top-1 h-8 w-8"
                  onClick={() => setSearchQuery('')}
                >
                  <X className="h-4 w-4" />
                </Button>
              )}
            </div>
          </SheetHeader>

          <ScrollArea className="flex-1 px-6 pb-6">
            {!searchQuery.trim() ? (
              // Default state - show suggestions and history
              <div className="space-y-6">
                {/* Search History */}
                {searchHistory.length > 0 && (
                  <div>
                    <div className="flex items-center justify-between mb-3">
                      <h3 className="font-semibold text-sm flex items-center gap-2">
                        <Clock className="w-4 h-4" />
                        –û—Å—Ç–∞–Ω–Ω—ñ –ø–æ—à—É–∫–∏
                      </h3>
                      <Button variant="ghost" size="sm" onClick={clearHistory}>
                        –û—á–∏—Å—Ç–∏—Ç–∏
                      </Button>
                    </div>
                    <div className="flex flex-wrap gap-2">
                      {searchHistory.map((query, index) => (
                        <Badge
                          key={index}
                          variant="outline"
                          className="cursor-pointer hover:bg-accent"
                          onClick={() => handleQuickSearch(query)}
                        >
                          {query}
                        </Badge>
                      ))}
                    </div>
                  </div>
                )}

                {/* Popular Searches */}
                <div>
                  <h3 className="font-semibold text-sm mb-3 flex items-center gap-2">
                    <Sparkles className="w-4 h-4" />
                    –ü–æ–ø—É–ª—è—Ä–Ω—ñ –∑–∞–ø–∏—Ç–∏
                  </h3>
                  <div className="flex flex-wrap gap-2">
                    {popularSearches.map((query, index) => (
                      <Badge
                        key={index}
                        className="cursor-pointer hover:bg-primary/80"
                        onClick={() => handleQuickSearch(query)}
                      >
                        {query}
                      </Badge>
                    ))}
                  </div>
                </div>

                {/* Trending */}
                <div>
                  <h3 className="font-semibold text-sm mb-3 flex items-center gap-2">
                    <TrendingUp className="w-4 h-4" />
                    –ü–æ–ø—É–ª—è—Ä–Ω–æ –∑–∞—Ä–∞–∑
                  </h3>
                  <div className="space-y-2">
                    {trendingSearches.map((query, index) => (
                      <div
                        key={index}
                        className="flex items-center justify-between p-2 rounded-lg hover:bg-accent cursor-pointer"
                        onClick={() => handleQuickSearch(query)}
                      >
                        <span className="text-sm">{query}</span>
                        <ArrowRight className="w-4 h-4 text-muted-foreground" />
                      </div>
                    ))}
                  </div>
                </div>

                {/* Quick Access */}
                <div>
                  <h3 className="font-semibold text-sm mb-3">–®–≤–∏–¥–∫–∏–π –¥–æ—Å—Ç—É–ø</h3>
                  <div className="grid grid-cols-2 gap-3">
                    <Link href="/configurator" onClick={onClose}>
                      <Card className="card-elegant cursor-pointer hover:shadow-glow">
                        <CardContent className="p-4 text-center">
                          <div className="text-2xl mb-2">ü§ñ</div>
                          <div className="text-sm font-medium">AI –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ç–æ—Ä</div>
                        </CardContent>
                      </Card>
                    </Link>
                    <Link href="/catalog" onClick={onClose}>
                      <Card className="card-elegant cursor-pointer hover:shadow-glow">
                        <CardContent className="p-4 text-center">
                          <div className="text-2xl mb-2">üìö</div>
                          <div className="text-sm font-medium">–ö–∞—Ç–∞–ª–æ–≥</div>
                        </CardContent>
                      </Card>
                    </Link>
                  </div>
                </div>
              </div>
            ) : (
              // Search results
              <div className="space-y-4">
                {isSearching ? (
                  <div className="flex items-center justify-center py-8">
                    <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary"></div>
                  </div>
                ) : searchResults.length > 0 ? (
                  <>
                    <div className="flex items-center justify-between">
                      <span className="text-sm text-muted-foreground">
                        –ó–Ω–∞–π–¥–µ–Ω–æ {searchResults.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
                      </span>
                    </div>
                    
                    {searchResults.map((result) => (
                      <Card
                        key={result.id}
                        className="card-elegant cursor-pointer hover:shadow-glow"
                        onClick={() => handleResultClick(result)}
                      >
                        <CardContent className="p-4">
                          <div className="flex items-start gap-3">
                            <div className="w-10 h-10 bg-accent/10 rounded-lg flex items-center justify-center flex-shrink-0">
                              <span className="text-lg">{result.image}</span>
                            </div>
                            <div className="flex-1 min-w-0">
                              <div className="flex items-start justify-between">
                                <div className="flex-1">
                                  <h4 className="font-medium text-sm mb-1 line-clamp-1">
                                    {result.title}
                                  </h4>
                                  <p className="text-xs text-muted-foreground line-clamp-2 mb-2">
                                    {result.description}
                                  </p>
                                  <div className="flex items-center gap-2">
                                    <Badge variant="outline" className="text-xs">
                                      {result.category}
                                    </Badge>
                                    {result.price && (
                                      <span className="text-xs font-medium text-primary">
                                        {result.price}
                                      </span>
                                    )}
                                  </div>
                                </div>
                                <ArrowRight className="w-4 h-4 text-muted-foreground ml-2 flex-shrink-0" />
                              </div>
                            </div>
                          </div>
                        </CardContent>
                      </Card>
                    ))}
                  </>
                ) : (
                  <div className="text-center py-8">
                    <div className="w-16 h-16 bg-muted/20 rounded-full flex items-center justify-center mx-auto mb-4">
                      <Search className="w-8 h-8 text-muted-foreground" />
                    </div>
                    <h3 className="font-semibold mb-2">–ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</h3>
                    <p className="text-sm text-muted-foreground">
                      –°–ø—Ä–æ–±—É–π—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ –∑–∞–ø–∏—Ç –∞–±–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –ø–æ–ø—É–ª—è—Ä–Ω–∏–º–∏ –ø–æ—à—É–∫–∞–º–∏
                    </p>
                  </div>
                )}
              </div>
            )}
          </ScrollArea>

          {/* Quick Actions Footer */}
          <div className="p-6 pt-4 border-t border-border">
            <div className="flex gap-2">
              <Button size="sm" variant="outline" asChild>
                <Link href="/catalog" onClick={onClose}>
                  –ö–∞—Ç–∞–ª–æ–≥
                </Link>
              </Button>
              <Button size="sm" variant="outline" asChild>
                <Link href="/configurator" onClick={onClose}>
                  –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ç–æ—Ä
                </Link>
              </Button>
              <Button size="sm" variant="outline" asChild>
                <Link href="/portfolio" onClick={onClose}>
                  –ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ
                </Link>
              </Button>
            </div>
          </div>
        </SheetContent>
      </Sheet>
    </>
  );
}
